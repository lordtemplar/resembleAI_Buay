import streamlit as st
import requests
import base64
from io import BytesIO

# --- Config ---
API_KEY = "Ew2pEvxMVxWWBQ2DzYzUTgtt"
VOICE_UUID = "562ef613"
SYNTH_ENDPOINT = "https://p.cluster.resemble.ai/synthesize"

HEADERS = {
    "Authorization": f"Bearer " + API_KEY,
    "Content-Type": "application/json"
}

st.title("üó£Ô∏è Simple TTS with Resemble (Base64 Audio)")

text = st.text_area("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:", height=200)

if st.button("üîä ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á"):
    if not text.strip():
        st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
    else:
        with st.spinner("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á..."):
            payload = {
                "voice_uuid": VOICE_UUID,
                "data": text
            }
            try:
                response = requests.post(SYNTH_ENDPOINT, json=payload, headers=HEADERS, timeout=20)
                response.raise_for_status()
                result = response.json()

                if result.get("audio_content"):
                    # üîì ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ base64 ‚Üí WAV
                    audio_base64 = result["audio_content"]
                    audio_bytes = base64.b64decode(audio_base64)
                    audio_buffer = BytesIO(audio_bytes)

                    st.success("‚úÖ ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                    st.audio(audio_buffer, format="audio/wav")
                    st.download_button("‚¨áÔ∏è ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á", data=audio_buffer, file_name="voice.wav", mime="audio/wav")
                else:
                    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå")
                    st.json(result)

            except Exception as e:
                st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
